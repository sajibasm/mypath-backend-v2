# Generated by Django 4.2.9 on 2025-05-20 13:03

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "country_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=3, null=True
                    ),
                ),
                (
                    "state_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=10, null=True
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                ("wikiDataId", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("wikiDataId", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "country_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=5, null=True
                    ),
                ),
                (
                    "state_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=10, null=True, unique=True
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
            options={
                "verbose_name": "State",
                "verbose_name_plural": "States",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Timezone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=3, null=True
                    ),
                ),
                ("tz_name", models.CharField(max_length=50)),
                ("zone_name", models.CharField(max_length=30)),
                ("gmt_offset", models.IntegerField()),
                ("abbreviation", models.CharField(max_length=10)),
                ("gmt_offset_name", models.CharField(max_length=10)),
            ],
            options={
                "verbose_name": "Timezone",
                "verbose_name_plural": "Timezones",
                "ordering": ["tz_name"],
            },
        ),
        migrations.CreateModel(
            name="SubRegion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("wikiDataId", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subregions",
                        to="geo.region",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sub Region",
                "verbose_name_plural": "Sub Regions",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "iso3",
                    models.CharField(blank=True, max_length=3, null=True, unique=True),
                ),
                (
                    "iso2",
                    models.CharField(blank=True, max_length=5, null=True, unique=True),
                ),
                (
                    "numeric_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("phone_code", models.CharField(blank=True, max_length=20, null=True)),
                ("capital", models.CharField(blank=True, max_length=255, null=True)),
                ("currency", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "currency_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "currency_symbol",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("tld", models.CharField(blank=True, max_length=10, null=True)),
                ("native", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "nationality",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                ("emoji", models.CharField(blank=True, max_length=10, null=True)),
                ("emojiU", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="region_countries",
                        to="geo.region",
                    ),
                ),
                (
                    "subregion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subregion_countries",
                        to="geo.subregion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Country",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("zip_code", models.CharField(db_index=True, max_length=10)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="city_places",
                        to="geo.city",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="country_places",
                        to="geo.country",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="state_places",
                        to="geo.state",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("country", "state", "city", "zip_code", "location")
                },
            },
        ),
        migrations.AddIndex(
            model_name="country",
            index=models.Index(fields=["iso2"], name="geo_country_iso2_03f221_idx"),
        ),
        migrations.AddIndex(
            model_name="country",
            index=models.Index(fields=["iso3"], name="geo_country_iso3_f97408_idx"),
        ),
    ]
