# Generated by Django 4.2.9 on 2025-05-22 17:46
from django.db import migrations
import csv
from pathlib import Path

def load_wheelchair_relations(apps, schema_editor):
    WheelchairRelation = apps.get_model('account', 'WheelchairRelation')
    User = apps.get_model('account', 'User')
    WheelchairType = apps.get_model('wheelchair', 'WheelchairType')
    WheelchairDriveType = apps.get_model('wheelchair', 'WheelchairDriveType')
    WheelchairTireMaterial = apps.get_model('wheelchair', 'WheelchairTireMaterial')

    # Mapping dictionaries
    wheelchair_type_map = {
        'mawc': 'Manual Wheelchair',
        'powc': 'Powered Wheelchair',
        'pawc': 'Power Assist Wheelchair',
        'owc': 'Other Wheelchair',
    }

    drive_type_map = {
        'fwd': 'Front Wheel Drive',
        'mwd': 'Mid Wheel Drive',
        'rwd': 'Rear Wheel Drive',
    }

    tire_material_map = {
        'pnwc': 'Pneumatic Wheelchair Tire',
        'ffwc': 'Flat-Free Wheelchair Tire',
        'sowc': 'Solid Wheelchair Tire',
        'other': 'Other',
    }

    csv_path = Path(__file__).resolve().parent / 'csv' / 'account_wheelchair.csv'
    if not csv_path.exists():
        print("❌ CSV file not found:", csv_path)
        return

    with open(csv_path, newline='', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            try:
                # Fallback to 'Other Wheelchair' if missing
                type_wc_code = row.get('type_wc', '').strip() or 'owc'
                wc_type_label = wheelchair_type_map.get(type_wc_code, 'Other Wheelchair')

                drive_type_label = drive_type_map.get(row.get('d_type', '').strip())
                tire_mat_label = tire_material_map.get(row.get('tire_mat', '').strip())

                wc_type = WheelchairType.objects.filter(name=wc_type_label).first()
                drive_type = WheelchairDriveType.objects.filter(name=drive_type_label).first() if drive_type_label else None
                tire_mat = WheelchairTireMaterial.objects.filter(name=tire_mat_label).first() if tire_mat_label else None
                user = User.objects.get(id=row['user_id'])

                WheelchairRelation.objects.update_or_create(
                    id=row['id'],
                    defaults={
                        'identifier': row['wc_identify'] or 'temp-id',
                        'wheel_number': int(row['number_w'] or 0),
                        'wheelchair_type': wc_type,
                        'wheelchair_drive_type': drive_type,
                        'wheelchair_tire_material': tire_mat,
                        'width': float(row['wc_wdt'] or 0),
                        'height': float(row['wc_ht'] or 0),
                        'user': user,
                        'status': 'active',
                        'is_default': False
                    }
                )
                print(f"✅ Inserted wheelchair relation for user ID {row['user_id']}")
            except Exception as e:
                print(f"❌ Error in row {row.get('id', 'unknown')}: {e}")

class Migration(migrations.Migration):

    dependencies = [
        ("account", "0003_init_migration"),
    ]

    operations = [
        migrations.RunPython(load_wheelchair_relations),
    ]
