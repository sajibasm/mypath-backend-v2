# Generated by Django 4.2.9 on 2025-05-22 18:05

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geo", "0007_auto_20250501_0415"),
        ("account", "0004_load_wheelchair_data"),
    ]

    operations = [
        migrations.CreateModel(
            name="SurfaceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name_plural": "Surface",
                "db_table": "navigation_surface_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Transit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                (
                    "average_speed",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "distance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "duration",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("barrier_report", models.BooleanField(db_index=True, default=False)),
                ("facility_report", models.BooleanField(db_index=True, default=False)),
                (
                    "source",
                    models.CharField(
                        choices=[("app", "App"), ("google", "Google"), ("osm", "OSM")],
                        db_index=True,
                        default="app",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("search", "Search"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("canceled", "Canceled"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "destination",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destination_transits",
                        to="geo.place",
                    ),
                ),
                (
                    "origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="origin_transits",
                        to="geo.place",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="navigationTransits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wheel_chair",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="userWheelchairRelation",
                        to="account.wheelchairrelation",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Transits",
                "db_table": "navigation_transit",
            },
        ),
        migrations.CreateModel(
            name="TransitMarker",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("segment_number", models.IntegerField(default=1)),
                (
                    "marker_category",
                    models.CharField(
                        choices=[("Barrier", "Barrier"), ("Facility", "Facility")],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    "marker_type",
                    models.CharField(
                        choices=[
                            ("Stairs", "Stairs"),
                            ("Steep Slope", "Steep Slope"),
                            ("Snow Pile", "Snow Pile"),
                            ("Construction", "Construction"),
                            ("Tree", "Tree"),
                            ("SideWalk", "SideWalk"),
                            ("No Curb Ramp", "No Curb Ramp"),
                            ("Elevator", "Elevator"),
                            ("Curb Ramp", "Curb Ramp"),
                            ("Crosswalk", "Crosswalk"),
                            ("Sidewalk", "Sidewalk"),
                            ("Others", "Others"),
                        ],
                        db_index=True,
                        max_length=100,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("detected", "Detected"), ("resolved", "Resolved")],
                        db_index=True,
                        default="detected",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "transit",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transit_markers",
                        to="navigation.transit",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Marker",
                "db_table": "navigation_transit_marker",
            },
        ),
        migrations.CreateModel(
            name="TravelType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name_plural": "Travel Type",
                "db_table": "navigation_travel_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TransitMarkerTracking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("detected", "Detected"),
                            ("persistent", "Persistent"),
                            ("resolved", "Resolved"),
                        ],
                        db_index=True,
                        default="detected",
                        help_text="Status of the marker resolution",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "marker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resolutions",
                        to="navigation.transitmarker",
                    ),
                ),
                (
                    "transit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="markers",
                        to="navigation.transit",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resolved_markers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Marker Tracking",
                "db_table": "navigation_transit_marker_tracking",
            },
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("inactive", "Inactive"), ("active", "Active")],
                        db_index=True,
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("route", models.JSONField(blank=True, null=True)),
                ("number_of_segments", models.IntegerField(db_index=True, default=1)),
                (
                    "destination",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes_to",
                        to="geo.place",
                    ),
                ),
                (
                    "origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes_from",
                        to="geo.place",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_routes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="navigationRoutes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Routes",
                "db_table": "navigation_route",
            },
        ),
    ]
